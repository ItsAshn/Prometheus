version: "3.8"

# SECURITY WARNING:
# - Never commit .env files with real secrets to Git
# - Change default passwords before deploying
# - See SECURITY.md for best practices

services:
  qwik-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prometheus
    environment:
      - NODE_ENV=production
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-changeme123}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - CONTAINER_NAME=prometheus
      - DOCKER_CONTAINER=true
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      # Persistent storage for uploaded videos and processed content
      - video-data:/app/public/videos
      - temp-data:/app/temp
      - app-data:/app/data

      # SECURITY WARNING: Docker socket mounting
      # Mounting /var/run/docker.sock gives the container FULL control over the Docker daemon
      # This is equivalent to root access on the host system!
      #
      # Required for: Auto-update feature in admin panel
      #
      # Security implications:
      # - Container can start/stop/modify ANY container on the host
      # - Container can access volumes from other containers
      # - Container can potentially escape to host system
      #
      # Safer alternatives:
      # 1. Use Watchtower for automated updates (runs in separate container)
      # 2. Use webhook-based deployment (e.g., GitHub webhooks)
      # 3. Manual updates via SSH/command line
      # 4. Use Docker API with restricted permissions (create a proxy container)
      #
      # If you keep this mounting:
      # - Ensure the container is properly secured
      # - Never expose the update endpoint publicly without authentication
      # - Consider network isolation
      # - Monitor container activity
      - /var/run/docker.sock:/var/run/docker.sock

      # Mount the docker-compose.yml for updates
      - ./docker-compose.yml:/app/docker-compose.yml:ro
      # Optional: Mount local directory for development
      # - ./public/videos:/app/public/videos
      # - ./temp:/app/temp
    networks:
      cloudflareTunnel:
        ipv4_address: 172.18.0.7
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits (optimized for video streaming)
    deploy:
      resources:
        limits:
          memory: 3G # Increased for video processing
          cpus: "2.0" # More CPU for FFmpeg encoding
        reservations:
          memory: 1G # Higher baseline for video handling
          cpus: "1.0"

volumes:
  video-data:
    driver: local
  temp-data:
    driver: local
  app-data:
    driver: local

networks:
  cloudflareTunnel:
    external: true
